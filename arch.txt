# Create partitions
cgdisk /dev/sdX
1 250MB EFI partition # Hex code ef00
2 500MB Boot partition # Hex code 8300
3 100% size partiton # (to be encrypted) Hex code 8300

mkfs.vfat -F32 /dev/nvme0n1p1
mkfs.ext2 /dev/nvme0n1p2

# Setup the encryption of the system
cryptsetup -c aes-xts-plain64 -y --use-random luksFormat /devnvme0n1p3
cryptsetup luksOpen /dev/sdX3 luks

pvcreate /dev/mapper/luks
vgcreate vg0 /dev/mapper/luks
lvcreate -l +100%FREE vg0 --name root

# Create filesystems on encrypted partitions
mkfs.ext4 /dev/mapper/vg0-root
mkswap /dev/mapper/vg0-swap

# Mount the new system 
mount /dev/mapper/vg0-root /mnt # /mnt is the installed system
mkdir /mnt/boot
mount /dev/nvme0n1p2 /mnt/boot
mkdir /mnt/boot/efi
mount /dev/nvme0n1p1 /mnt/boot/efi

pacstrap /mnt base base-devel grub-efi-x86_64 vim git efibootmgr networkmanager linux linux-firmware intel-ucode
# 'install' fstab
genfstab -pU /mnt >> /mnt/etc/fstab
# Make /tmp a ramdisk (add the following line to /mnt/etc/fstab)
tmpfs	/tmp	tmpfs	defaults,noatime,mode=1777	0	0

# Enter the new system
arch-chroot /mnt /bin/bash
echo MYHOSTNAME > /etc/hostname
#Time
vim /etc/locale.gen
locale-gen 
echo LANG=en_US.UTF-8 > /etc/locale.conf 
export LANG=en_US.UTF-8
ln -s /usr/share/zoneinfo/America/LosAngeles /etc/localtime
hwclock --systohc --utc
nano /etc/pacman.conf
pacman -Sy
passwd
useradd -m -g users -G wheel,storage,power -s /bin/bash USERNAME
passwd  USERNAME
VISUDO
Pacman -S -<

# Configure mkinitcpio with modules needed for the initrd image
vim /etc/mkinitcpio.conf
# Add 'ext4' to MODULES
# Add 'plymouth', 'encrypt' and 'lvm2' to HOOKS before filesystems

# Regenerate initrd image
mkinitcpio -p linux

# Setup grub
grub-install
In /etc/default/grub edit the line GRUB_CMDLINE_LINUX to GRUB_CMDLINE_LINUX="cryptdevice=/dev/sdX3:luks:allow-discards" 
add "splash" then run:
grub-mkconfig -o /boot/grub/grub.cfg

